<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Prerelease|Win32">
      <Configuration>Prerelease</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Prerelease|x64">
      <Configuration>Prerelease</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Simulation|Win32">
      <Configuration>Simulation</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Simulation|x64">
      <Configuration>Simulation</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{33B3898E-2119-427B-A80D-8C66C54AD5D5}</ProjectGuid>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <WindowsTargetPlatformVersion>8.1</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <PlatformToolset>Intel C++ Compiler 17.0</PlatformToolset>
    <UseOfMfc>false</UseOfMfc>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Simulation|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <PlatformToolset>Intel C++ Compiler 17.0</PlatformToolset>
    <UseOfMfc>false</UseOfMfc>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <PlatformToolset>v140</PlatformToolset>
    <UseOfMfc>false</UseOfMfc>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Simulation|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <PlatformToolset>Intel C++ Compiler 17.0</PlatformToolset>
    <UseOfMfc>false</UseOfMfc>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <PlatformToolset>Intel C++ Compiler 17.0</PlatformToolset>
    <UseOfMfc>false</UseOfMfc>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Prerelease|Win32'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <PlatformToolset>Intel C++ Compiler 17.0</PlatformToolset>
    <UseOfMfc>false</UseOfMfc>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <PlatformToolset>Intel C++ Compiler 17.0</PlatformToolset>
    <UseOfMfc>false</UseOfMfc>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Prerelease|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <PlatformToolset>Intel C++ Compiler 17.0</PlatformToolset>
    <UseOfMfc>false</UseOfMfc>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props" Condition="exists('$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props')" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Simulation|Win32'" Label="PropertySheets">
    <Import Project="$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props" Condition="exists('$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props')" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props" Condition="exists('$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props')" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Simulation|x64'" Label="PropertySheets">
    <Import Project="$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props" Condition="exists('$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props')" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props" Condition="exists('$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props')" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Prerelease|Win32'" Label="PropertySheets">
    <Import Project="$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props" Condition="exists('$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props')" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props" Condition="exists('$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props')" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Prerelease|x64'" Label="PropertySheets">
    <Import Project="$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props" Condition="exists('$(LocalAppData)\Microsoft\VisualStudio\10.0\SecureEnclave.$(Platform).props')" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(NoInherit)</IncludePath>
    <LibraryPath>$(NoInherit)</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Simulation|Win32'">
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(NoInherit)</IncludePath>
    <LibraryPath>$(NoInherit)</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>
    </IncludePath>
    <LibraryPath>
    </LibraryPath>
    <ExcludePath>$(VC_IncludePath);$(WindowsSDK_IncludePath);$(MSBuild_ExecutablePath);$(VC_LibraryPath_x64);</ExcludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Simulation|x64'">
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(NoInherit)</IncludePath>
    <LibraryPath>$(NoInherit)</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(NoInherit)</IncludePath>
    <LibraryPath>$(NoInherit)</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Prerelease|Win32'">
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(NoInherit)</IncludePath>
    <LibraryPath>$(NoInherit)</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(NoInherit)</IncludePath>
    <LibraryPath>$(NoInherit)</LibraryPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Prerelease|x64'">
    <GenerateManifest>false</GenerateManifest>
    <LinkIncremental>false</LinkIncremental>
    <IncludePath>$(NoInherit)</IncludePath>
    <LibraryPath>$(NoInherit)</LibraryPath>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <Optimization>Disabled</Optimization>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalIncludeDirectories>$(SGXSDKInstallPath)include;$(SGXSDKInstallPath)include\tlibc;$(SGXSDKInstallPath)include\stlport;$(SGXSDKInstallPath)include\epid;$(SGXSDKInstallPath)include\ippcp;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TreatWarningAsError>true</TreatWarningAsError>
    </ClCompile>
    <Link>
      <AdditionalDependencies>sgx_tcrypto.lib;sgx_tkey_exchange.lib;sgx_tstdcxx.lib;sgx_trts.lib;sgx_tstdc.lib;sgx_tservice.lib;</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SGXSDKInstallPath)bin\$(Platform)\$(Configuration)</AdditionalLibraryDirectories>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <EntryPointSymbol />
      <NoEntryPoint>true</NoEntryPoint>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <TreatLinkerWarningAsErrors>true</TreatLinkerWarningAsErrors>
    </Link>
    <PostBuildEvent>
      <Command>"$(SGXSDKInstallPath)bin\win32\release\sgx_sign.exe" sign -key "isv_enclave_private.pem" -enclave "$(OutDir)isv_enclave.dll" -out "$(OutDir)isv_enclave.signed.dll" -config "isv_enclave.config.xml"</Command>
      <Message>sign the enclave</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Simulation|Win32'">
    <ClCompile>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <Optimization>Disabled</Optimization>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalIncludeDirectories>$(SGXSDKInstallPath)include;$(SGXSDKInstallPath)include\tlibc;$(SGXSDKInstallPath)include\stlport;$(SGXSDKInstallPath)include\epid;$(SGXSDKInstallPath)include\ippcp;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TreatWarningAsError>true</TreatWarningAsError>
    </ClCompile>
    <Link>
      <AdditionalDependencies>sgx_tcrypto.lib;sgx_tkey_exchange.lib;sgx_tstdcxx.lib;sgx_trts_sim.lib;sgx_tstdc.lib;sgx_tservice_sim.lib;</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SGXSDKInstallPath)bin\$(Platform)\debug</AdditionalLibraryDirectories>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <EntryPointSymbol>
      </EntryPointSymbol>
      <NoEntryPoint>true</NoEntryPoint>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <TreatLinkerWarningAsErrors>true</TreatLinkerWarningAsErrors>
    </Link>
    <PostBuildEvent>
      <Command>"$(SGXSDKInstallPath)bin\win32\release\sgx_sign.exe" sign -key "isv_enclave_private.pem" -enclave "$(OutDir)isv_enclave.dll" -out "$(OutDir)isv_enclave.signed.dll" -config "isv_enclave.config.xml"</Command>
      <Message>sign the enclave</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <Optimization>Disabled</Optimization>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalIncludeDirectories>$(SGXSDKInstallPath)include;$(SGXSDKInstallPath)include\tlibc;$(SGXSDKInstallPath)include\stlport;$(SGXSDKInstallPath)include\epid;$(SGXSDKInstallPath)include\ippcp;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TreatWarningAsError>false</TreatWarningAsError>
    </ClCompile>
    <Link>
      <AdditionalDependencies>sgx_tcrypto.lib;sgx_tkey_exchange.lib;sgx_tstdcxx.lib;sgx_trts.lib;sgx_tstdc.lib;sgx_tservice.lib;</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SGXSDKInstallPath)bin\$(Platform)\$(Configuration)</AdditionalLibraryDirectories>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <EntryPointSymbol>
      </EntryPointSymbol>
      <NoEntryPoint>true</NoEntryPoint>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <TreatLinkerWarningAsErrors>true</TreatLinkerWarningAsErrors>
    </Link>
    <PostBuildEvent>
      <Command>"$(SGXSDKInstallPath)bin\win32\release\sgx_sign.exe" sign -key "isv_enclave_private.pem" -enclave "$(OutDir)isv_enclave.dll" -out "$(OutDir)isv_enclave.signed.dll" -config "isv_enclave.config.xml"</Command>
      <Message>sign the enclave</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Simulation|x64'">
    <ClCompile>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
      <Optimization>Disabled</Optimization>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalIncludeDirectories>$(SGXSDKInstallPath)include;$(SGXSDKInstallPath)include\tlibc;$(SGXSDKInstallPath)include\stlport;$(SGXSDKInstallPath)include\epid;$(SGXSDKInstallPath)include\ippcp;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TreatWarningAsError>true</TreatWarningAsError>
    </ClCompile>
    <Link>
      <AdditionalDependencies>sgx_tcrypto.lib;sgx_tkey_exchange.lib;sgx_tstdcxx.lib;sgx_trts_sim.lib;sgx_tstdc.lib;sgx_tservice_sim.lib;</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SGXSDKInstallPath)bin\$(Platform)\debug</AdditionalLibraryDirectories>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <EntryPointSymbol>
      </EntryPointSymbol>
      <NoEntryPoint>true</NoEntryPoint>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <TreatLinkerWarningAsErrors>true</TreatLinkerWarningAsErrors>
    </Link>
    <PostBuildEvent>
      <Command>"$(SGXSDKInstallPath)bin\win32\release\sgx_sign.exe" sign -key "isv_enclave_private.pem" -enclave "$(OutDir)isv_enclave.dll" -out "$(OutDir)isv_enclave.signed.dll" -config "isv_enclave.config.xml"</Command>
      <Message>sign the enclave</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <Optimization>MaxSpeed</Optimization>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalIncludeDirectories>$(SGXSDKInstallPath)include;$(SGXSDKInstallPath)include\tlibc;$(SGXSDKInstallPath)include\stlport;$(SGXSDKInstallPath)include\epid;$(SGXSDKInstallPath)include\ippcp;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TreatWarningAsError>true</TreatWarningAsError>
      <FunctionLevelLinking>true</FunctionLevelLinking>
    </ClCompile>
    <Link>
      <AdditionalDependencies>sgx_tcrypto.lib;sgx_tkey_exchange.lib;sgx_tstdcxx.lib;sgx_trts.lib;sgx_tstdc.lib;sgx_tservice.lib;</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SGXSDKInstallPath)bin\$(Platform)\$(Configuration)</AdditionalLibraryDirectories>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <EntryPointSymbol />
      <NoEntryPoint>true</NoEntryPoint>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <TreatLinkerWarningAsErrors>true</TreatLinkerWarningAsErrors>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
    </Link>
    <PostBuildEvent>
      <Command>"$(SGXSDKInstallPath)bin\win32\release\sgx_sign.exe" gendata -enclave "$(OutDir)isv_enclave.dll" -out "$(OutDir)isv_enclave.hex" -config "isv_enclave.config.xml"</Command>
      <Message>generate the enclave signing material</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Prerelease|Win32'">
    <ClCompile>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <Optimization>MaxSpeed</Optimization>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalIncludeDirectories>$(SGXSDKInstallPath)include;$(SGXSDKInstallPath)include\tlibc;$(SGXSDKInstallPath)include\stlport;$(SGXSDKInstallPath)include\epid;$(SGXSDKInstallPath)include\ippcp;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TreatWarningAsError>true</TreatWarningAsError>
      <FunctionLevelLinking>true</FunctionLevelLinking>
    </ClCompile>
    <Link>
      <AdditionalDependencies>sgx_tcrypto.lib;sgx_tkey_exchange.lib;sgx_tstdcxx.lib;sgx_trts.lib;sgx_tstdc.lib;sgx_tservice.lib;</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SGXSDKInstallPath)bin\$(Platform)\Release</AdditionalLibraryDirectories>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <EntryPointSymbol>
      </EntryPointSymbol>
      <NoEntryPoint>true</NoEntryPoint>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <TreatLinkerWarningAsErrors>true</TreatLinkerWarningAsErrors>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
    </Link>
    <PostBuildEvent>
      <Command>"$(SGXSDKInstallPath)bin\win32\release\sgx_sign.exe" sign -key "isv_enclave_private.pem" -enclave "$(OutDir)isv_enclave.dll" -out "$(OutDir)isv_enclave.signed.dll" -config "isv_enclave.config.xml"</Command>
      <Message>sign the enclave</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <Optimization>MaxSpeed</Optimization>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalIncludeDirectories>$(SGXSDKInstallPath)include;$(SGXSDKInstallPath)include\tlibc;$(SGXSDKInstallPath)include\stlport;$(SGXSDKInstallPath)include\epid;$(SGXSDKInstallPath)include\ippcp;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TreatWarningAsError>true</TreatWarningAsError>
      <FunctionLevelLinking>true</FunctionLevelLinking>
    </ClCompile>
    <Link>
      <AdditionalDependencies>sgx_tcrypto.lib;sgx_tkey_exchange.lib;sgx_tstdcxx.lib;sgx_trts.lib;sgx_tstdc.lib;sgx_tservice.lib;</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SGXSDKInstallPath)bin\$(Platform)\$(Configuration)</AdditionalLibraryDirectories>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <EntryPointSymbol>
      </EntryPointSymbol>
      <NoEntryPoint>true</NoEntryPoint>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <TreatLinkerWarningAsErrors>true</TreatLinkerWarningAsErrors>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
    </Link>
    <PostBuildEvent>
      <Command>"$(SGXSDKInstallPath)bin\win32\release\sgx_sign.exe" gendata -enclave "$(OutDir)isv_enclave.dll" -out "$(OutDir)isv_enclave.hex" -config "isv_enclave.config.xml"</Command>
      <Message>generate the enclave signing material</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Prerelease|x64'">
    <ClCompile>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
      <Optimization>MaxSpeed</Optimization>
      <WarningLevel>Level4</WarningLevel>
      <AdditionalIncludeDirectories>$(SGXSDKInstallPath)include;$(SGXSDKInstallPath)include\tlibc;$(SGXSDKInstallPath)include\stlport;$(SGXSDKInstallPath)include\epid;$(SGXSDKInstallPath)include\ippcp;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <TreatWarningAsError>true</TreatWarningAsError>
      <FunctionLevelLinking>true</FunctionLevelLinking>
    </ClCompile>
    <Link>
      <AdditionalDependencies>sgx_tcrypto.lib;sgx_tkey_exchange.lib;sgx_tstdcxx.lib;sgx_trts.lib;sgx_tstdc.lib;sgx_tservice.lib;</AdditionalDependencies>
      <AdditionalLibraryDirectories>$(SGXSDKInstallPath)bin\$(Platform)\Release</AdditionalLibraryDirectories>
      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
      <EntryPointSymbol>
      </EntryPointSymbol>
      <NoEntryPoint>true</NoEntryPoint>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <TreatLinkerWarningAsErrors>true</TreatLinkerWarningAsErrors>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
    </Link>
    <PostBuildEvent>
      <Command>"$(SGXSDKInstallPath)bin\win32\release\sgx_sign.exe" sign -key "isv_enclave_private.pem" -enclave "$(OutDir)isv_enclave.dll" -out "$(OutDir)isv_enclave.signed.dll" -config "isv_enclave.config.xml"</Command>
      <Message>sign the enclave</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="isv_enclave.edl">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">"$(SGXSDKInstallPath)bin\win32\release\sgx_edger8r.exe" --trusted "isv_enclave.edl" --search-path "$(SGXSDKInstallPath)include"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Simulation|Win32'">"$(SGXSDKInstallPath)bin\win32\release\sgx_edger8r.exe" --trusted "isv_enclave.edl" --search-path "$(SGXSDKInstallPath)include"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"$(SGXSDKInstallPath)bin\win32\release\sgx_edger8r.exe" --trusted "isv_enclave.edl" --search-path "$(SGXSDKInstallPath)include"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Simulation|x64'">"$(SGXSDKInstallPath)bin\win32\release\sgx_edger8r.exe" --trusted "isv_enclave.edl" --search-path "$(SGXSDKInstallPath)include"</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">Creating proxy/bridge routines</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Simulation|Win32'">Creating proxy/bridge routines</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Creating proxy/bridge routines</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Simulation|x64'">Creating proxy/bridge routines</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(ProjectName)_t.h;$(ProjectName)_t.c;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Simulation|Win32'">$(ProjectName)_t.h;$(ProjectName)_t.c;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectName)_t.h;$(ProjectName)_t.c;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Simulation|x64'">$(ProjectName)_t.h;$(ProjectName)_t.c;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">isv_enclave.config.xml;%(AdditionalInputs)</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Simulation|Win32'">isv_enclave.config.xml;%(AdditionalInputs)</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">isv_enclave.config.xml;%(AdditionalInputs)</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Simulation|x64'">isv_enclave.config.xml;%(AdditionalInputs)</AdditionalInputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">"$(SGXSDKInstallPath)bin\win32\release\sgx_edger8r.exe" --trusted "isv_enclave.edl" --search-path "$(SGXSDKInstallPath)include"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Prerelease|Win32'">"$(SGXSDKInstallPath)bin\win32\release\sgx_edger8r.exe" --trusted "isv_enclave.edl" --search-path "$(SGXSDKInstallPath)include"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"$(SGXSDKInstallPath)bin\win32\release\sgx_edger8r.exe" --trusted "isv_enclave.edl" --search-path "$(SGXSDKInstallPath)include"</Command>
      <Command Condition="'$(Configuration)|$(Platform)'=='Prerelease|x64'">"$(SGXSDKInstallPath)bin\win32\release\sgx_edger8r.exe" --trusted "isv_enclave.edl" --search-path "$(SGXSDKInstallPath)include"</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">Creating proxy/bridge routines</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Prerelease|Win32'">Creating proxy/bridge routines</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Creating proxy/bridge routines</Message>
      <Message Condition="'$(Configuration)|$(Platform)'=='Prerelease|x64'">Creating proxy/bridge routines</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(ProjectName)_t.h;$(ProjectName)_t.c;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Prerelease|Win32'">$(ProjectName)_t.h;$(ProjectName)_t.c;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(ProjectName)_t.h;$(ProjectName)_t.c;%(Outputs)</Outputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Prerelease|x64'">$(ProjectName)_t.h;$(ProjectName)_t.c;%(Outputs)</Outputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">isv_enclave.config.xml;%(AdditionalInputs)</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Prerelease|Win32'">isv_enclave.config.xml;%(AdditionalInputs)</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">isv_enclave.config.xml;%(AdditionalInputs)</AdditionalInputs>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Prerelease|x64'">isv_enclave.config.xml;%(AdditionalInputs)</AdditionalInputs>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="biginteger.cpp" />
    <ClCompile Include="bigintegeralgorithms.cpp" />
    <ClCompile Include="bigintegerutils.cpp" />
    <ClCompile Include="bigunsigned.cpp" />
    <ClCompile Include="bigunsignedbase.cpp" />
    <ClCompile Include="isv_enclave.cpp" />
    <ClCompile Include="isv_enclave_t.c" />
    <ClCompile Include="matrix.cpp" />
    <ClCompile Include="SEAL\bigpoly.cpp" />
    <ClCompile Include="SEAL\bigpolyarith.cpp" />
    <ClCompile Include="SEAL\biguint.cpp" />
    <ClCompile Include="SEAL\chooser.cpp" />
    <ClCompile Include="SEAL\decryptor.cpp" />
    <ClCompile Include="SEAL\encoder.cpp" />
    <ClCompile Include="SEAL\encryptionparams.cpp" />
    <ClCompile Include="SEAL\encryptor.cpp" />
    <ClCompile Include="SEAL\evaluationkeys.cpp" />
    <ClCompile Include="SEAL\evaluator.cpp" />
    <ClCompile Include="SEAL\keygenerator.cpp" />
    <ClCompile Include="SEAL\randomgen.cpp" />
    <ClCompile Include="SEAL\simulator.cpp" />
    <ClCompile Include="SEAL\utilities.cpp" />
    <ClCompile Include="SEAL\util\clipnormal.cpp" />
    <ClCompile Include="SEAL\util\common.cpp" />
    <ClCompile Include="SEAL\util\computation.cpp" />
    <ClCompile Include="SEAL\util\mempool.cpp" />
    <ClCompile Include="SEAL\util\modulus.cpp" />
    <ClCompile Include="SEAL\util\polyarith.cpp" />
    <ClCompile Include="SEAL\util\polyarithmod.cpp" />
    <ClCompile Include="SEAL\util\polycore.cpp" />
    <ClCompile Include="SEAL\util\polyextras.cpp" />
    <ClCompile Include="SEAL\util\polyfftmult.cpp" />
    <ClCompile Include="SEAL\util\polyfftmultmod.cpp" />
    <ClCompile Include="SEAL\util\polymodulus.cpp" />
    <ClCompile Include="SEAL\util\uintarith.cpp" />
    <ClCompile Include="SEAL\util\uintarithmod.cpp" />
    <ClCompile Include="SEAL\util\uintcore.cpp" />
    <ClCompile Include="SEAL\util\uintextras.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\SEAL\bigpoly.h" />
    <ClInclude Include="..\SEAL\bigpolyarith.h" />
    <ClInclude Include="..\SEAL\bigpolyarray.h" />
    <ClInclude Include="..\SEAL\biguint.h" />
    <ClInclude Include="..\SEAL\chooser.h" />
    <ClInclude Include="..\SEAL\decryptor.h" />
    <ClInclude Include="..\SEAL\encoder.h" />
    <ClInclude Include="..\SEAL\encryptionparams.h" />
    <ClInclude Include="..\SEAL\encryptor.h" />
    <ClInclude Include="..\SEAL\evaluationkeys.h" />
    <ClInclude Include="..\SEAL\evaluator.h" />
    <ClInclude Include="..\SEAL\keygenerator.h" />
    <ClInclude Include="..\SEAL\polycrt.h" />
    <ClInclude Include="..\SEAL\randomgen.h" />
    <ClInclude Include="..\SEAL\seal.h" />
    <ClInclude Include="..\SEAL\simulator.h" />
    <ClInclude Include="..\SEAL\utilities.h" />
    <ClInclude Include="..\SEAL\util\clipnormal.h" />
    <ClInclude Include="..\SEAL\util\common.h" />
    <ClInclude Include="..\SEAL\util\computation.h" />
    <ClInclude Include="..\SEAL\util\crt.h" />
    <ClInclude Include="..\SEAL\util\defines.h" />
    <ClInclude Include="..\SEAL\util\locks.h" />
    <ClInclude Include="..\SEAL\util\mempool.h" />
    <ClInclude Include="..\SEAL\util\modulus.h" />
    <ClInclude Include="..\SEAL\util\ntt.h" />
    <ClInclude Include="..\SEAL\util\polyarith.h" />
    <ClInclude Include="..\SEAL\util\polyarithmod.h" />
    <ClInclude Include="..\SEAL\util\polycore.h" />
    <ClInclude Include="..\SEAL\util\polyextras.h" />
    <ClInclude Include="..\SEAL\util\polyfftmult.h" />
    <ClInclude Include="..\SEAL\util\polyfftmultmod.h" />
    <ClInclude Include="..\SEAL\util\polymodulus.h" />
    <ClInclude Include="..\SEAL\util\randomtostd.h" />
    <ClInclude Include="..\SEAL\util\uintarith.h" />
    <ClInclude Include="..\SEAL\util\uintarithmod.h" />
    <ClInclude Include="..\SEAL\util\uintcore.h" />
    <ClInclude Include="..\SEAL\util\uintextras.h" />
    <ClInclude Include="biginteger.h" />
    <ClInclude Include="bigintegeralgorithms.h" />
    <ClInclude Include="bigintegerlibrary.h" />
    <ClInclude Include="bigintegerutils.h" />
    <ClInclude Include="bigunsigned.h" />
    <ClInclude Include="bigunsignedbase.h" />
    <ClInclude Include="isv_enclave_t.h" />
    <ClInclude Include="matrix.h" />
    <ClInclude Include="resource.h" />
    <ClInclude Include="SEAL\bigpoly.h" />
    <ClInclude Include="SEAL\bigpolyarith.h" />
    <ClInclude Include="SEAL\biguint.h" />
    <ClInclude Include="SEAL\chooser.h" />
    <ClInclude Include="SEAL\decryptor.h" />
    <ClInclude Include="SEAL\encoder.h" />
    <ClInclude Include="SEAL\encryptionparams.h" />
    <ClInclude Include="SEAL\encryptor.h" />
    <ClInclude Include="SEAL\evaluationkeys.h" />
    <ClInclude Include="SEAL\evaluator.h" />
    <ClInclude Include="SEAL\keygenerator.h" />
    <ClInclude Include="SEAL\randomgen.h" />
    <ClInclude Include="SEAL\seal.h" />
    <ClInclude Include="SEAL\simulator.h" />
    <ClInclude Include="SEAL\utilities.h" />
    <ClInclude Include="SEAL\util\clipnormal.h" />
    <ClInclude Include="SEAL\util\common.h" />
    <ClInclude Include="SEAL\util\computation.h" />
    <ClInclude Include="SEAL\util\mempool.h" />
    <ClInclude Include="SEAL\util\modulus.h" />
    <ClInclude Include="SEAL\util\polyarith.h" />
    <ClInclude Include="SEAL\util\polyarithmod.h" />
    <ClInclude Include="SEAL\util\polycore.h" />
    <ClInclude Include="SEAL\util\polyextras.h" />
    <ClInclude Include="SEAL\util\polyfftmult.h" />
    <ClInclude Include="SEAL\util\polyfftmultmod.h" />
    <ClInclude Include="SEAL\util\polymodulus.h" />
    <ClInclude Include="SEAL\util\randomtostd.h" />
    <ClInclude Include="SEAL\util\uintarith.h" />
    <ClInclude Include="SEAL\util\uintarithmod.h" />
    <ClInclude Include="SEAL\util\uintcore.h" />
    <ClInclude Include="SEAL\util\uintextras.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>